#include <stdio.h>
#include <stdlib.h>
#include <iostream>
using namespace std;

struct Thora
{
    int hra;
    int minu;
};

typedef struct Tfecha
{
    int dia;
    int mes;
    int anio;
};

typedef struct Tvuelo
{
    int nvuelo;
    char c_origen[15];
    char c_destino[15];
    char matricula[10];
    char piloto[20];
    Thora h_vuelo;
    Tfecha f_vuelo;
    int estado;//1 programado, 2 realizado
    Tvuelo *sig;
};

typedef struct Tpasajero
{
    int nvuelo;
    char cedula[10];
    char pasajero[20];
    char telefono[10];
    int estado; //1 programado, 2 realizado
    Tpasajero *sigpasajero;
};
void valifecha (Tfecha *v)
{
	int band=-1;

	printf("\nIngrese el dia para el vuelo: ");
	scanf("%d",(&v->dia));
	printf("\nIngrese el mes del vuelo: ");
	scanf("%d",(&v->mes));
	printf("\nIngrese el año del vuelo: ");
	scanf("%d",(&v->anio));

    if((v->dia)<1||(v->dia)>31)
        {
            printf("\nError, este dia no existe en el calendario.");
            band=0;
        }

    if((v->anio)<1910)
        {
            printf("\nError, en este año ni se habia realizado el primer vuelo comercial. ");band=0;
        }

    if((v->mes)<1||(v->mes)>12)
        {
            printf("\nError, el mes ingresado es invalido.");band=0;
        }

    if(((v->anio)%400==0)&&((v->anio)%100==0)&&((v->mes)==2)&&((v->dia)>29))
        {
            printf("\nError, Febrero es bisciesto, solo tiene 29 dias.");band=0;
        }

    if(((v->anio)%400!=0)&&((v->anio)%100!=0)&&((v->mes)==2)&&((v->dia)>28))
        {
            printf("\nError, Febrero no es bisciesto, solo tiene 28 dias.");band=0;
        }
        	if(((v->mes)==1)&&((v->dia)>31))
		{
			cout<<"\nFecha invalida, enero solo tiene 31 dias.";band=0;
		}

	if(((v->mes==3)&&((v->dia)>31)))
		{
			cout<<"\nFecha invalida, marzo solo tiene 31 dias";band=0;
        }

	if(((v->mes)==4)&&((v->dia)>30))
		{
			cout<<"\nFecha invalida, abril solo tiene 30 dias";band=0;
		}

	if(((v->mes)==5)&&((v->dia)>31))
		{
			cout<<"\nFecha invalida, mayo solo tiene 31 dias";band=0;
		}

	if(((v->mes)==6)&&((v->dia)>30))
		{
			cout<<"\nFecha invalida, junio solo tiene 30 dias";band=0;
		}

	if(((v->mes)==7)&&((v->dia)>31))
		{
			cout<<"\nFecha invalida, julio solo tiene 31 dias";band=0;
		}

	if(((v->mes)==8)&&((v->dia)>31))
		{
			cout<<"\nFecha invalida, agosto solo tiene 31 dias";band=0;
		}

	if(((v->mes)==9)&&((v->dia)>30))
		{
			cout<<"\nFecha invalida, septiembre solo tiene 30 dias";band=0;
		}

	if(((v->mes)==10)&&((v->dia)>31))
		{
			cout<<"\nFecha invalida, octubre solo tiene 31 dias";band=0;
		}

	if(((v->mes)==11)&&((v->dia)>30))
		{
			cout<<"\nFecha invalida, noviembre solo tiene 30 dias";band=0;
		}

	if(((v->mes)==12)&&((v->dia)>31))
		{
			cout<<"\nFecha invalida, diciembre solo tiene 31 dias";band=0;
		}
	if(band==0)
		{
			printf("\n");
			valifecha(v);
		}
}

void valihora(Thora *h)
{
	int band=-1;
	printf("\nIngrese la hora del vuelo, formato 24h ");
	printf("\nHH: ");
	scanf("%d",&h->hra);
	printf("\nMM: ");
	scanf("%d",&h->minu);


	if((h->hra)<0||(h->hra)>=24)
		{
			printf("\nError, el rango de la hora esta entre las 00:00 y las 23:59.");
			band=0;
		}
	if((h->minu)>59||(h->minu)<0)
		{
			printf("\nError, el rango de la hora esta entre las 00:00 y las 23:59. ");
			band=0;
		}
	if(band==0)
	{
		printf("\n");
		valihora(h);
	}
}

void menu()
{
    printf("\t******************************************************|\n");
    printf("\t|		BIENVENIDO A RESERVA DE VUELOS                  |\n");
    printf("\t|1.Para ingresar un vuelo nuevo.                      |\n");
    printf("\t|2.Para ingresar un pasajero nuevo.                   |\n");
    printf("\t|3.Para listar vuelos realizados.                     |\n");
    printf("\t|4.Para listar vuelos programados.                    |\n");
    printf("\t|5.Para listar pasajeros de un vuelo programado.      |\n");
    printf("\t|6.Para listar pasajeros de un vuelo realizado.       |\n");
    printf("\t|7.Para hacer seguimiento de un cliente.              |\n");
    printf("\t|8.Para registrar un pasajero a bordo.                |\n");
    printf("\t|0.Para salir.                                        |\n");
	printf("\t|*****************************************************|\n");                                 \n");
    printf("Ingrese opcion: ");
    
}
void aggvuelo (Tvuelo *vuelo)
{
    FILE *viajar=NULL;
    char *nomarch= "archvuelo.txt";
    Tfecha fech;
    Thora hor;
   	Tvuelo *v=new(struct Tvuelo);

    cout<<"\t\t\t****AGREGAR VUELO****\n";
    fflush(stdin);
    cout<<"Ingrese el numero de vuelo: ";
    cin>>v->nvuelo;
    fflush(stdin);
    cout<<"\nIngrese la ciudad de origen del vuelo: ";
     cin>>v->c_origen;
    fflush(stdin);
    cout<<"\nIngrese la ciudad destino del vuelo: ";
    cin>>v->c_destino;
    fflush(stdin);
    cout<<"\nIngrese la matricula del avión: ";
    cin>>v->matricula;
    fflush(stdin);
    cout<<"\nIngrese el nombre del piloto del avion: ";
    cin>>v->piloto;
    fflush(stdin);
    printf("\n");
	valihora(&hor);
    fflush(stdin);
    printf("\n");
    valifecha(&fech);
    fflush(stdin);
    cout<<"\nIngrese el estado del vuelo (1-Programado, 2-Realizado): ";
    cin>>v->estado;
    fflush(stdin);
    vuelo=v;

    /*viajar=fopen(nomarch,"w");

    if(viajar==NULL)
        {
            printf("Error al abrir el archivo...");
        }
    else
        {

            fprintf(viajar,"\n%d \n%s \n%s \n%s ",v->nvuelo,v->c_origen,v->c_destino,v->matricula);
            fflush(stdin);
            fprintf(viajar,"\n%d \n%d ",hor.hra,hor.minu);
            fflush(stdin);
            fprintf(viajar,"\n%d \n%d \n%d ",fech.dia,fech.mes,fech.anio);
            fflush(stdin);
            fprintf(viajar,"\n%d ",v->estado);
        }
       fclose(viajar);*/
}

void aggpasajero (Tpasajero *p)
{
	Tpasajero pasajero=new(struct Tpasajero);
	//FILE* archivo=NULL;
	//char *nomarch= "pasajero.txt";
	//archivo=fopen(nomarch,"w");

	printf("\t\t****AGREGAR PASAJERO****\n\n");
	printf("Ingrese por favor el numero de vuelo asignado al pasajero: ");
	cin>> pasajero->nvuelo;
	printf("\nIngrese por favor el numero de cédula del pasajero: ");
	cin>> pasajero->cedula;
	printf("\nIngrese por favor el nombre completo del pasajero: ");
	cin>> pasajero->pasajero;
	printf("\nIngrese por favor el numero telefonico del pasajero: ");
	fflush(stdin);
	cin>> pasajero->telefono;
	printf("\nIngrese por favor el estado del vuelo del pasajero (1.Programado-2.Realizado): ");
	scanf ("%d ",pasajero->estado);
	p=pasajero;
	

/*
	if(archivo==NULL)
		{
			printf("Error al abrir el archivo. ");
		}
	else
		{
			fprintf(archivo,"\n%d",pasajero->nvuelo);
			fprintf(archivo,"\n%s",pasajero->cedula);
			fprintf(archivo,"\n%s",pasajero->pasajero);
			fprintf(archivo,"\n%s",pasajero->telefono);
			fprintf(archivo,"\n%d",pasajero->estado);
		}
		fclose(archivo);*/
}

/*
void ingresa_vuelo (Tvuelo  *vue)
{

        Tvuelo v=new(struct Tvuelo);
        FILE *archivo=NULL;
        char *nomarch="archvuelo.txt";

        archivo=fopen(nomarch,"r");

        if(archivo==NULL)
            {
                printf("Error al abrir el archivo. ");
            }

        else
            {
                fscanf(archivo,"%d",v->nvuelo);
                fscanf(archivo,"%s %s %s %s", v->c_origen,v->c_destino,v->matricula,v->piloto);
                fscanf(archivo,"%d %d", v->h_vuelo.hra,v->h_vuelo.minu);
                fscanf(archivo,"%d",v->estado);
                vue=v->sig;
            }
    fclose(archivo);
}*/
/*
void mostrar(Tvuelo vuelo)
{
    while(vuelo!=NULL)
    {
        printf("%d",vuelo->nvuelo);
        printf("%d",vuelo->estado);
        vuelo=vuelo->sig;
    }
    system("pause");
}*/

int main ()
{
   	Tvuelo V[1];
   	Tpasajero P[1];

   	int opc;
   	menu();
   	scanf("%d",&opc);
   	do
    {
        switch(opc)
        {

            case 1:
                    aggvuelo(V);
                    break;
            case 2:
                    aggpasajero(P);
                    break;
        }
    }
    while(opc!=0);
    system("pause");
    return 0;

	//aggvuelo(V);
    //aggpasajero(P);

    return 1;
}

